# version: '3.8'

services:
  app:
    container_name: productivity-project
    build:
      context: .
      args:
        - --rm
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             daphne -b 0.0.0.0 -p 8000 productivity-app.asgi:application"
    ports:
      - 8000:8000
    volumes:
      - .:/app
      - ./data/web:/vol/web
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=True
      - SQL_ENGINE=${SQL_ENGINE}
      - SQL_HOST=db
      - SQL_DATABASE=${SQL_DATABASE}
      - SQL_USER=${SQL_USER}
      - SQL_PASSWORD=${SQL_PASSWORD}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
    depends_on:
      - db
      - redis

  db:
    image: postgres:17-alpine
    container_name: productivity-project-db
    volumes:
      - productivity-project-postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${SQL_DATABASE}
      - POSTGRES_USER=${SQL_USER}
      - POSTGRES_PASSWORD=${SQL_PASSWORD}

  redis:
    restart: always
    image: redis:7.4.2-alpine
    ports:
      - '6379:6379'
    volumes:
      - redisdata:/data

  # flower:
  #   image: mher/flower
  #   restart: always
  #   command: celery flower -A productivity_project -l info --basic-auth=admin:admin
  #   ports:
  #     - 5555:5555
  #   environment:
  #     - CELERY_BROKER_URL=redis://redis:6379/0

  # celery:
  #   container_name: celery
  #   restart: always
  #   build: .
  #   command: celery -A productivity_project worker -l info
  #   volumes:
  #     - .:/app
  #     - ./data/web:/vol/web
  #   environment:
  #     - SECRET_KEY=${SECRET_KEY}
  #     - DEBUG=True
  #     - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
  #     - SQL_ENGINE=${SQL_ENGINE}
  #     - SQL_HOST=db
  #     - SQL_DATABASE=${SQL_DATABASE}
  #     - SQL_USER=${SQL_USER}
  #     - SQL_PASSWORD=${SQL_PASSWORD}
  #     - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
  #   depends_on:
  #     - redis

  # celery-beat:
  #   container_name: celery-beat
  #   restart: always
  #   build: .
  #   command: celery -A productivity_project beat -l info
  #   volumes:
  #     - .:/app
  #   environment:
  #     - SECRET_KEY=${SECRET_KEY}
  #     - DEBUG=True
  #     - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
  #     - SQL_ENGINE=${SQL_ENGINE}
  #     - SQL_HOST=db
  #     - SQL_DATABASE=${SQL_DATABASE}
  #     - SQL_USER=${SQL_USER}
  #     - SQL_PASSWORD=${SQL_PASSWORD}
  #   depends_on:
  #     - redis

volumes:
  productivity-project-postgres-data:
  redisdata:
