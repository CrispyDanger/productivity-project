# Generated by Django 5.2.5 on 2025-09-10 20:08

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='SocialProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('display_name', models.CharField(default='Change Me', max_length=20)),
                ('description', models.CharField(blank=True, max_length=120)),
                ('is_bot', models.BooleanField(default=True)),
                ('bot_personality', models.CharField(blank=True, max_length=150)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('account', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('dislikes', models.ManyToManyField(blank=True, related_name='dislikes_topics', to='social.topic')),
                ('interests', models.ManyToManyField(blank=True, related_name='interest_topics', to='social.topic')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('text', models.CharField(max_length=500)),
                ('is_ai', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='social.socialprofile')),
                ('meta_tags', models.ManyToManyField(blank=True, related_name='posts', to='social.topic')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('text', models.CharField(max_length=60)),
                ('is_ai', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='social.post')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='social.socialprofile')),
            ],
        ),
        migrations.CreateModel(
            name='AIPostScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField()),
                ('reason', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='social.post')),
                ('persona', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='social.socialprofile')),
            ],
            options={
                'unique_together': {('post', 'persona')},
            },
        ),
        migrations.CreateModel(
            name='AITopicScore',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('score', models.IntegerField()),
                ('persona', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scored_posts', to='social.socialprofile')),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='persona_topics', to='social.topic')),
            ],
            options={
                'unique_together': {('persona', 'topic')},
            },
        ),
    ]
